library(ALGR)
devtools::document()
roxygen2::roxygenise()
library(ALGR)
usethis::use_testthat()
roxygen2::roxygenize()
roxygen2::roxygenise()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
usethis::use_test("establish_dl")
devtools::document()
use_lgpl_license()
usethis::use_gpl_license()
library(ALGR)
devtools::document()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
devtools::document()
devtools::build_readme()
library(ALGR)
devtools::build_readme()
devtools::build_readme()
.Last.error
devtools::build_readme()
devtools::build_readme()
r<-generate_pn(500,500,1,2,3,0.01,TRUE, "land_percentage", percetange = 70)
output<-establish_pac(potential_space= r,
cell_size=1,
includsion_value = 1,
mean_field_size = 500,
sd_field_size = 100,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 70,
assign_farmers = TRUE,
assign_mode = 2,
mean_fields_per_farm = 3,
sd_fields_per_farm = 3)
return_by_field(output, method = 1)
r<-generate_pn(500,500,1,2,3,0.03,TRUE, "land_percentage", percetange = 70)
plot(r)
r<-generate_pn(500,500,1,2,3,0.03,TRUE, "land_percentage", percetange = 70)
terra::plot(r)
r<-generate_pn(500,500,2,2,3,0.01,TRUE, "land_percentage", percetange = 70)
terra::plot(r)
r<-generate_pn(500,500,1,3,3,0.01,TRUE, "land_percentage", percetange = 70)
terra::plot(r)
r<-generate_pn(500,500,1,6,3,0.01,TRUE, "land_percentage", percetange = 70)
terra::plot(r)
r<-generate_pn(500,500,1,6,3,0.005,TRUE, "land_percentage", percetange = 70)
terra::plot(r)
r<-generate_pn(500,500,1,3,3,0.005,TRUE, "land_percentage", percetange = 70)
terra::plot(r)
r<-generate_pn(500,500,1,1,3,0.005,TRUE, "land_percentage", percetange = 70)
terra::plot(r)
r<-generate_pn(500,500,1,1,3,0.005,TRUE, "land_percentage", percetange = 70)
terra::plot(r)
output<-establish_pac(potential_space= r,
cell_size=1,
includsion_value = 1,
mean_field_size = 500,
sd_field_size = 100,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 90,
assign_farmers = TRUE,
assign_mode = 2,
mean_fields_per_farm = 3,
sd_fields_per_farm = 3)
return_by_field(output, method = 1)
devtools::build_readme()
use_github_actions()
usethis::use_github_actions()
devtools::build_readme()
devtools::document()
library(ALGR)
library(ALGR)
devtools::document()
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(45)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(45)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(45)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(60)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(1989)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(2025)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(2023)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(2023)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 70)
terra::plot(test)
set.seed(2023)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 60)
terra::plot(test)
set.seed(2023)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 80)
terra::plot(test)
set.seed(2023)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
library(ALGR)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= r,
cell_size=1,
includsion_value = 1,
mean_field_size = 50,
sd_field_size = 25,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 50,
sd_field_size = 25,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 50,
sd_field_size = 25,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 40,
sd_field_size = 25,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 20,
sd_field_size = 20,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 20,
sd_field_size = 20,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 10,
sd_field_size = 10,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 10,
sd_field_size = 10,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 10,
sd_field_size = 10,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 10,
sd_field_size = 10,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
terra::plot(test)
terra::plot(test, col = terrain.colors(4))
terra::plot(test, col = terrain.colors(3))
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
color_palette <- colorRampPalette(c("white", "blue"))
terra::plot(test, col = color_palette(2))
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
color_palette <- colorRampPalette(c("blue", "red"))
terra::plot(test, col = color_palette(2))
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 10,
sd_field_size = 10,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
crops_matrix <- data.frame(crop = c("Wheat", "Corn", "Soybean"),
percentage = c(0.4, 0.3, 0.3),
index = c(1,2,3))  # Desired percentages
outcome<-distrubute_crops(map,crops_matrix)
return_by_crop(outcome)
crops_matrix <- data.frame(crop = c("Wheat", "Corn", "Soybean"),
percentage = c(0.4, 0.3, 0.3),
index = c(1,2,3))  # Desired percentages
outcome<-distrubute_crops(map,crops_matrix)
return_by_crop(outcome)
library(ALGR)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
color_palette <- colorRampPalette(c("blue", "red"))
terra::plot(test, col = color_palette(2))
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 10,
sd_field_size = 10,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
crops_matrix <- data.frame(crop = c("Wheat", "Corn", "Soybean"),
percentage = c(0.4, 0.3, 0.3),
index = c(1,2,3))  # Desired percentages
outcome<-distrubute_crops(map,crops_matrix)
return_by_crop(outcome)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
color_palette <- colorRampPalette(c("blue", "red"))
terra::plot(test, col = color_palette(2))
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 5,
sd_field_size = 5,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land(map, borders = TRUE)
crops_matrix <- data.frame(crop = c("Wheat", "Corn", "Soybean"),
percentage = c(0.4, 0.3, 0.3),
index = c(1,2,3))  # Desired percentages
outcome<-distrubute_crops(map,crops_matrix)
return_by_crop(outcome)
set.seed(2023)
test<-generate_pn(25,25,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
color_palette <- colorRampPalette(c("blue", "red"))
terra::plot(test, col = color_palette(2))
map<-establish_pac(potential_space= test,
cell_size=1,
includsion_value = 1,
mean_field_size = 5,
sd_field_size = 5,
distribution = "norm",
mean_shape_index = 1,
sd_shape_index = 0.3,
percent = 75)
return_by_arable_land<-function(output_obj, borders = FALSE,  method = 1){
land = matrix(0, nrow(output_obj$map), ncol(output_obj$map))
for(i in 1:length(output_obj$field_list)){
obj<-output_obj$field_list[[i]]
row_range<-obj@location[[1]]
col_range<-obj@location[[2]]
for(k in 1:length(col_range)){
land[row_range[k], col_range[k]] <- 1
}
}
land_raster<-terra::rast(land)
terra::ext(land_raster)<-terra::ext(output_obj$map)
if(method == 1){
if(borders == FALSE){
polygons <- terra::as.polygons(land_raster, n=8,fun=function(x){x > 0}, na.rm=TRUE, digits=12, dissolve=TRUE)
terra::plot(land_raster, legend = FALSE)
terra::plot(polygons, add = TRUE, border = "black", lwd = 1)
}
if(borders == TRUE){
terra::plot(land_raster, legend = FALSE)
fields <- return_by_field(output_obj, method =2)
polygons <- terra::as.polygons(fields, n=8,fun=function(x){x > 0}, na.rm=TRUE, digits=12, dissolve=TRUE)
terra::plot(polygons, add = TRUE, border = "black", lwd = 5)
}
}
if(method == 2){
return(land_raster)
}
}
return_by_crop<-function(output_obj, method = 1){
land = matrix(0, nrow(output_obj$map), ncol(output_obj$map))
for(i in 1:length(output_obj$field_list)){
obj<-output_obj$field_list[[i]]
row_range<-obj@location[[1]]
col_range<-obj@location[[2]]
crop<-obj@crop
for(k in 1:length(col_range)){
land[row_range[k], col_range[k]] <- crop
}
}
land_raster<-terra::rast(land)
terra::ext(land_raster)<-terra::ext(output_obj$map)
if(method == 1){
terra::plot(land_raster, legend = FALSE)
fields <- return_by_field(output_obj, method =2)
polygons <- terra::as.polygons(fields, n=8,fun=function(x){x > 0}, na.rm=TRUE, digits=12, dissolve=TRUE)
terra::plot(polygons, add = TRUE, border = "black", lwd = 5)
}
if(method == 2){
return(land_raster)
}
}
return_by_arable_land(map, borders = TRUE)
crops_matrix <- data.frame(crop = c("Wheat", "Corn", "Soybean"),
percentage = c(0.4, 0.3, 0.3),
index = c(1,2,3))  # Desired percentages
outcome<-distrubute_crops(map,crops_matrix)
return_by_crop(outcome)
library(ALGR)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
ext(test)
terra::ext(test)
terra::ext(test)[1]
terra::ext(test)<- terra::ext(test) * 3
terra::ext(test)
terra::res(test)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
terra::ext(test)
terra::res(test) <- terra::res(test) * 3
terra::ext(test)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
terra::ext(test)
terra::res(test) <- terra::res(test) * 3
terra::ext(test)
terra::ext(test)
terra::res(test)
terra::plot(test)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
terra::res(test)
terra::res(test) <- terra::res(test) * 3
terra::plot(test)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
terra::res(test)
#terra::res(test) <- terra::res(test) * 3
terra::ext(test)<- c(0, terra::ext(test)[2]* 3, 0  )
terra::plot(test)
terra::ext(test)
#terra::res(test) <- terra::res(test) * 3
terra::ext(test)<- c(0, terra::ext(test)[2]* 3, 0  terra::ext(test)[4]* 3)
terra::ext(test)
#terra::res(test) <- terra::res(test) * 3
terra::ext(test)<- c(0, terra::ext(test)[2]* 3, 0,  terra::ext(test)[4]* 3)
terra::ext(test)
terra::plot(test)
terra::res(test)
test<-generate_pn(200,200,1,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
terra::res(test)
#terra::res(test) <- terra::res(test) * 3
terra::ext(test)<- c(0, terra::ext(test)[2]* 3, 0,  terra::ext(test)[4]* 3)
terra::res(test)
library(ALGR)
test<-generate_pn(200,200,3,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
test<-generate_pn(200,200,100,2,3,0.01,TRUE, "land_percentage", percetange = 75)
terra::plot(test)
params<-poll4pop::parameters
params
write.csv("C://Users//Eyal//Documents//PhD//tabea//params.csv")
write.csv(params, "C://Users//Eyal//Documents//PhD//tabea//params.csv")
write.csv(params$florNestInfo$floralCover, "C://Users//Eyal//Documents//PhD//tabea//floralCover.csv")
write.csv(params$florNestInfo$attract, "C://Users//Eyal//Documents//PhD//tabea//floralCover.csv")
write.csv(params$florNestInfo$floralCover, "C://Users//Eyal//Documents//PhD//tabea//floralCover.csv")
params$florNestInfo$attract
params<-poll4pop::parameters
write.csv(params$florNestInfo$floralCover, "C://Users//Eyal//Documents//PhD//tabea//floralCover.csv")
write.csv(params$florNestInfo$attract, "C://Users//Eyal//Documents//PhD//tabea//nesting_attrack.csv")
write.csv(params$poll_names, "C://Users//Eyal//Documents//PhD//tabea//poll_names.csv")
write.csv(params$lfn, "C://Users//Eyal//Documents//PhD//tabea//lc_names.csv")
usethis::use_test("establish_pac")
usethis::use_test("generate_pn")
devtools::document()
library(ALGR)
usethis::use_gitlab_ci()
use_coverage(pkg = ".", type = c("codecov"))
usethis::use_coverage(pkg = ".", type = c("codecov"))
usethis::use_coverage(type = c("codecov", "coveralls"), repo_spec = pogoyoly/ALGR)
usethis::use_coverage(type = c("codecov", "coveralls"), repo_spec = "pogoyoly/ALGR")
devtools::build_readme()
install.packages("covr")
library(covr)
codecov(token = "secrets.CODECOV_TOKEN")
codecov(token = "f5ef932d-5b1e-4b30-acc4-064e78838d61")
